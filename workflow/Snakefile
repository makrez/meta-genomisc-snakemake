import os, string, re

configfile: "config/config.json"

### Config Variables
### ----------------------------------------------------------------------------

DataFolder = config['DataFolder']
fastx_extension = config["extension"]

# Samples
files = os.listdir(DataFolder)
complete_extension = config['complete_extension']
samples = set([re.sub(complete_extension, "", file) for file in files])

mates = list(config['mates'].values())

wildcard_constraints:
    sample = "|".join(samples)

## Check if Reference file exists
if (
        config["remove_host"]["remove_host"] and
        os.path.isfile(config["remove_host"]["host_reference"])
   ):
    print("Host reference file exists")

elif (
            config["remove_host"]["remove_host"] == False
        ):
        print("No filtering with host.")


else:
	sys.exit("Host reference missing")

# Run the snakemake pipeline depending on inputs from config

if (
        config["remove_host"]["remove_host"] and # removing host DNA
        config["pool_reads_before_assembly"] == False # samples are assembled individually.
    ):
    rule all:
      input: expand("results/04_meta-assembly/{sample}_assembly_finished.txt", \
                    sample=samples)
    include: "rules/QC.smk"
    include: "rules/filter_host.smk"
    include: "rules/meta_assembly_individual.smk"

if (
        config["remove_host"]["remove_host"] == False and
        config["pool_reads_before_assembly"] == False
    ):
    rule all:
      input: expand("results/04_meta-assembly/{sample}_assembly_finished.txt", \
                    sample=samples)
    include: "rules/QC.smk"
    #include: "rules/filter_host.smk"
    include: "rules/meta_assembly_individual.smk"

if (
        config["remove_host"]["remove_host"] and
        config["pool_reads_before_assembly"]
    ):
    rule all:
      input: "results/04_meta-assembly/pooled_assembly_finished.txt"
    include: "rules/QC.smk"
    include: "rules/filter_host.smk"
    include: "rules/pool_reads.smk"
    include: "rules/meta_assembly.smk"

if (
        config["remove_host"]["remove_host"] == False and
        config["pool_reads_before_assembly"]
    ):
    rule all:
      input: "results/04_meta-assembly/pooled_assembly_finished.txt"
    include: "rules/QC.smk"
    #include: "rules/filter_host.smk"
    include: "rules/pool_reads.smk"
    include: "rules/meta_assembly.smk"

else:
    print("it is false")
